Step 1. Have Python launch a new command prompt upon startup, and start itself through there, 

	Functions to try:
	import subprocess: Allows python to launch child processes, and interact with inputs and outputs, system commands, and execute them within python script.
	
	Launch a new command prompt window in the background and execute the Python script
	subprocess.Popen(["start", "cmd", "/c", "python", "script.py"], shell=True)

	execution will continue after launching the command prompt window


Step 2. Auto-close the command prompt, but still keep the python file executing

def add_to_startup(file_path):
    # Open the "Run" key in the Windows Registry
    with winreg.OpenKey(winreg.HKEY_CURRENT_USER, "Software\\Microsoft\\Windows\\CurrentVersion\\Run", 0, winreg.KEY_SET_VALUE) as key:
        # Set the value of the Python script to the specified file path
        winreg.SetValueEx(key, "DailyDesktopBackgroundRotatorTest.py", 0, winreg.REG_SZ, file_path)

# Replace "script.py" with the path to your Python script file
script_path = r"C:\Users\Livvy\OneDrive\000\PythonProjects\WindowsBackgroundRotator\DailyDesktopBackgroundRotatorTest.py"

# Add the Python script to the Windows startup
add_to_startup(script_path)

# Launch the Python script in the background
subprocess.Popen(["pythonw", script_path], shell=True)
